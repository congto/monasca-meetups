https://horizon.hpcloud.com/

openstack_meetup_sunnyvale_aug_2015

# Set up an instance in the public cloud

############### MONASCA-DOCKER ###############

# Connect to the public cloud instance
ssh-keygen -R 15.126.219.85
ssh -i ~/tmp/default.pem core@15.126.219.85 -L 8183:localhost:8083 -L 8100:localhost:80 -L 8180:localhost:8080 -L 5100:localhost:5000 -L 35357:localhost:35357

# Doing the download with cUrl
# Download the tarball of monasca-docker since we don't have git on CoreOS
curl -L https://github.com/hpcloud-mon/monasca-docker/tarball/master/monasca-docker.tar.gz | tar zx && cd *monasca-docker*

# Run the Monasca Docker demo
sudo docker run -d -p 8083:8083 -p 80:80 -p 8080:8080 -p 5000:5000 -p 35357:35357 --name monasca monasca/demo

# From the Docker target host (15.126.219.85) start a bash shell on the Monasca container
# you need the --login to read your .profile
docker exec -ti $(docker ps -a | grep monasca | grep -v grep | awk '{print $1}') /bin/bash --login

# Install some useful utilities
apt-get install most tree vim alpine curl openjdk-8-jdk -y

# Set up the credentials so the monasca CLI will work
echo "" /root/.profile
echo "export LANG=en_US.UTF-8" >> ~/.profile
echo "export PYTHONIOENCODING=utf-8" >> ~/.profile
echo "export TERM=vt100" >> ~/.profile
echo "# Use the Monasca Python virtualenv" >> ~/.profile
echo "source /opt/monasca/bin/activate" >> ~/.profile

# Set up the environment so the monasca client tool will work
echo "export OS_PROJECT_NAME=mini-mon" > monasca.env
echo "export OS_PASSWORD=password" >> monasca.env
echo "export OS_AUTH_URL=http://localhost:35357/v3/" >> monasca.env
echo "export OS_USERNAME=mini-mon" >> monasca.env

# Create a identity_show command
#!/bin/bash

url="http://localhost:35357/v3/"

TOKEN=`curl -s -X POST http://localhost:35357/v2.0/tokens -d '{"auth": {"passwordCredentials": {"username":"admin", "password":"admin"}, "tenantName":"admin"}}' -H "Content-type: application/json" | python -c 'import json,sys; response=json.loads(sys.stdin.read()); print response["access"]["token"]["id"]'`;

if [ "$1" == "users" ]; then
  resource="users"
fi

if [ "$1" == "domains" ]; then
  resource="domains"
fi

if [ "$1" == "projects" ]; then
  resource="projects"
fi
if [ ! -z $resource ]; then
  curl -s $url$resource -H "X-Auth-Token: "$TOKEN"" | python -m json.tool
fi

# Make script executable
chmod a+x identity_show

# Source the env
source monasca.env

# Set up the environment so the keystone tool will work
echo "export OS_PROJECT_NAME=admin" > devstack.env
echo "export OS_PASSWORD=admin" >> devstack.env
echo "export OS_AUTH_URL=http://localhost:5000/v2.0" >> devstack.env
echo "export OS_USERNAME=admin" >> devstack.env
echo "export OS_TENANT_NAME=admin" >> devstack.env

# Source the env
source devstack.env

# Generate a US locale
localedef -v -c -i en_US -f UTF-8 en_US.UTF-8

# Bring the credentials in to our current shell
source ~/.profile

# Start the notification engine
/opt/monasca/bin/python /opt/monasca/bin/monasca-notification &

# Start the Monasca Persister
/usr/bin/java -Dfile.encoding=UTF-8 -Xmx1g -cp /opt/monasca/monasca-persister.jar:/opt/monasca/vertica/vertica_jdbc.jar monasca.persister.PersisterApplication server /etc/monasca/persister-config.yml &

# Install the smoke tests
curl -L https://github.com/hpcloud-mon/monasca-ci/tarball/master | tar zx && cp -R ./hpcloud-mon-monasca-ci-*/tests /opt/monasca

# Run the smoke test
/opt/monasca/tests/smoke/smoke.py


################ DEVSTACK ################

# Login to the new instance
ssh -i ~/tmp/default.pem ubuntu@15.126.128.225 -L 8283:localhost:8083 -L 8200:localhost:80 -L 8280:localhost:8080 -L 5200:localhost:5000 -L 3306:localhost:3306

# Install Git
sudo apt-get update;sudo apt-get install git most -y

# Clone Devstack
git clone https://git.openstack.org/openstack-dev/devstack && cd devstack

# Setup the IP from the external host
cp samples/local.conf .

# Put in our public IP
sed -i 's/#HOST_IP=w\.x\.y\.z/HOST_IP=10.0.0.49/g' local.conf

# Enable Heat on Devstack
sed -i '/[[local|localrc]]/a \\n#Enable heat services\nenable_service h-eng h-api h-api-cfn h-api-cw' local.conf

# Match the admin password with Monasca's admin
sed -i 's/ADMIN_PASSWORD=nomoresecrete/ADMIN_PASSWORD=admin/g' local.conf

# The network overlaps with the public cloud internal network
sed -i 's/10\.0\.0\.0/10.10.10.0/g' stackrc

# Start Devstack
./stack.sh

# Get the envs set
source openrc admin admin

# Setup the env for python-monascaclient
echo "export OS_AUTH_URL=http://10.0.0.51:35357/v3/" > ~/monasca.env
echo "export OS_PASSWORD=admin" >> ~/monasca.env
echo "export OS_PROJECT_NAME=mini-mon" >> ~/monasca.env
echo "export OS_USERNAME=admin" >> ~/monasca.env
echo "export OS_NO_CLIENT_AUTH=1" >> ~/monasca.env
echo "export MONASCA_API_URL=http://10.0.0.51:8080/v2.0/" >> ~/monasca.env

# Setup the env for openstack tools
echo "export OS_REGION_NAME=RegionOne" > ~/devstack.env
echo "export OS_IDENTITY_API_VERSION=2.0" >> ~/devstack.env
echo "export OS_PASSWORD=admin" >> ~/devstack.env
echo "export OS_AUTH_URL=http://localhost:5000/v2.0" >> ~/devstack.env
echo "export OS_USERNAME=admin" >> ~/devstack.env
echo "export OS_TENANT_NAME=admin" >> ~/devstack.env
echo "export OS_VOLUME_API_VERSION=2" >> ~/devstack.env
echo "export OS_NO_CACHE=1" >> ~/devstack.env

# Make sure Heat is working on Devstack
heat stack-list
heat resource-type-list

# Install python-monascaclient on Devstack for convenience
sudo pip install python-monascaclient -y



################ SAMPLE HEAT TEST ################

wget http://cloud.fedoraproject.org/fedora-20.x86_64.qcow2

# Upload a Fedora image to Glance

glance image-create --name Fedora20 --container-format bare --disk-format qcow2 --progress --file ~/fedora-20.x86_64.qcow2 --public

heat stack-create teststack -u http://git.openstack.org/cgit/openstack/heat-templates/plain/hot/F20/WordPress_Native.yaml -P key_name=heat_key -P image_id=Fedora20 --is-public true


######################### DEVSTACK HEAT DEMO #############################

source heat.env

export HEAT_URL=http://localhost:8004/v1/f3fde1481ce54a7391214d1c955360e4
export export OS_AUTH_URL=http://10.0.0.51:35357/v2.0/
export OS_PASSWORD=password
export OS_TENANT_NAME=mini-mon
export OS_USERNAME=mini-mon

vi /etc/heat/heat.conf

# stack_user_domain_id = 6448799dcf5a4e3d9170d7584846d910
[keystone_authtoken]
# signing_dir = /var/cache/heat
# cafile = /opt/stack/data/ca-bundle.pem
admin_tenant_name = admin
admin_password = admin
admin_user = admin
identity_uri = http://10.0.0.51:35357
auth_uri = http://10.0.0.51:5000/v2.0

[ec2authtoken]
auth_uri = http://10.0.0.51:5000/v2.0

ubuntu@devstack:~$ heat resource-type-list
+------------------------------------------+
| resource_type                            |
+------------------------------------------+
| ...                                      |
| OS::Monasca::AlarmDefinition             |
| OS::Monasca::Notification                |
| ...                                      |
+------------------------------------------+

